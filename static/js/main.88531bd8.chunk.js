(this["webpackJsonpxstate-react-typescript-template"]=this["webpackJsonpxstate-react-typescript-template"]||[]).push([[0],{24:function(t,e,n){},35:function(t,e,n){"use strict";n.r(e),n.d(e,"nluRequest",(function(){return j}));var a=n(23),o=n(10),s=(n(24),n(7),n(20)),r=n(41),i=n(4),c=n(40),l=n(39);function d(t){return Object(i.k)((e=>({type:"SPEAK",value:t})))}function y(){return Object(i.k)("LISTEN")}const p={John:{person:"John Appleseed"},Regina:{person:"Regina Phalange"},Rachel:{person:"Rachel Green"},Beyonce:{person:"Beyonce Knowles"},Drake:{person:"Doctor Drake Ramoray"},Monday:{day:"Monday"},"on Monday":{day:"Monday"},Tuesday:{day:"Tuesday"},"on Tuesday":{day:"Tuesday"},Wednesday:{day:"Wednesday"},"on Wednesday":{day:"Wednesday"},Thursday:{day:"Thursday"},"on Thursday":{day:"Thursday"},Friday:{day:"Friday"},"on Friday":{day:"Friday"},Saturday:{day:"Saturday"},"on Saturday":{day:"Saturday"},Sunday:{day:"Sunday"},"on Sunday":{day:"Sunday"},8:{time:"8:00"},"at 8":{time:"8:00"},9:{time:"9:00"},"at 9":{time:"9:00"},10:{time:"10:00"},"at 10":{time:"10:00"},11:{time:"11:00"},"at 11":{time:"11:00"},12:{time:"12:00"},"at 12":{time:"12:00"},1:{time:"13:00"},"at 1":{time:"13:00"},2:{time:"14:00"},"at 2":{time:"14:00"},3:{time:"15:00"},"at 3":{time:"15:00"},4:{time:"16:00"},"at 4":{time:"16:00"},5:{time:"17:00"},"at 5":{time:"17:00"},6:{time:"18:00"},"at 6":{time:"18:00"}},m={yes:{yes:!0},"of course":{yes:!0},sure:{yes:!0},yeah:{yes:!0},no:{no:!1},"no way":{no:!1},nope:{no:!1}},u={initial:"init",states:{init:{initial:"prompt",on:{ENDSPEECH:"who"},states:{prompt:{entry:d("OK. Let's create an appointment!")}}},who:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"person"in(p[t.recResult]||{}),actions:Object(i.b)((t=>({person:p[t.recResult].person}))),target:"day"},{target:".nomatch"}]},states:{prompt:{entry:d("Who are you meeting with?"),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:d("Sorry I don't know them"),on:{ENDSPEECH:"prompt"}}}},day:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"day"in(p[t.recResult]||{}),actions:Object(i.b)((t=>({day:p[t.recResult].day}))),target:"allday"},{target:".nomatch"}]},states:{prompt:{entry:Object(i.k)((t=>({type:"SPEAK",value:"OK. ".concat(t.person,". On which day is your meeting?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:d("Sorry I didn't catch that. On which day is your meeting?"),on:{ENDSPEECH:"ask"}}}},allday:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"yes"in(m[t.recResult]||{}),target:"schedule_meeting_allday"},{cond:t=>"no"in(m[t.recResult]||{}),target:"time"},{target:".nomatch"}]},states:{prompt:{entry:Object(i.k)((t=>({type:"SPEAK",value:"OK. ".concat(t.day,". Will it take all day?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:d("Sorry I didn't catch that. Will it take all day?"),on:{ENDSPEECH:"ask"}}}},time:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"time"in(p[t.recResult]||{}),actions:Object(i.b)((t=>({time:p[t.recResult].time}))),target:"schedule_meeting"},{target:".nomatch"}]},states:{prompt:{entry:Object(i.k)((t=>({type:"SPEAK",value:"OK. What time is your meeting?"}))),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:d("Sorry I didn't catch that. What time is your meeting?"),on:{ENDSPEECH:"ask"}}}},schedule_meeting_allday:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"yes"in(m[t.recResult]||{}),target:"end"},{cond:t=>"no"in(m[t.recResult]||{}),target:"who"},{target:".nomatch"}]},states:{prompt:{entry:Object(i.k)((t=>({type:"SPEAK",value:"Do you want me to create an appointment with ".concat(t.person," on ").concat(t.day,"?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:d("Sorry I didn't catch that"),on:{ENDSPEECH:"prompt"}}}},schedule_meeting:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"yes"in(m[t.recResult]||{}),target:"end"},{cond:t=>"no"in(m[t.recResult]||{}),target:"who"},{target:".nomatch"}]},states:{prompt:{entry:Object(i.k)((t=>({type:"SPEAK",value:"Do you want me to create an appointment with ".concat(t.person," on ").concat(t.day," at ").concat(t.time,"?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:d("Sorry I didn't catch that"),on:{ENDSPEECH:"prompt"}}}},end:{initial:"prompt",states:{prompt:{entry:d("Your appointment has been created. If you need help with something else, please click on the screen."),on:{ENDSPEECH:"#root.dm"}}}}}};function h(t){return Object(i.k)((e=>({type:"SPEAK",value:t})))}const E={initial:"init",states:{init:{on:{CLICK:"welcome"}},welcome:{initial:"prompt",on:{RECOGNISED:{target:"invoking_rasa"}},states:{prompt:{entry:h("Welcome! I can help you schedule a meeting, set an alarm and add to your to do list. What would you like to do?"),on:{ENDSPEECH:"ask"}},ask:{entry:Object(i.k)("LISTEN")}}},invoking_rasa:{invoke:{id:"rasa",src:(t,e)=>j(t.recResult),onDone:[{target:"appointment",cond:(t,e)=>"appointments"===e.data.intent.name},{target:"timer",cond:(t,e)=>"timer"===e.data.intent.name},{target:"todoList",cond:(t,e)=>"todo_item"===e.data.intent.name}],onError:{target:"welcome"}}},appointment:Object(o.a)({},u),timer:{initial:"prompt",states:{prompt:{entry:h("OK. I will help you set a timer."),on:{ENDSPEECH:"#root.dm"}}}},todoList:{initial:"prompt",states:{prompt:{entry:h("OK. Let's add to your to do list!"),on:{ENDSPEECH:"#root.dm"}}}}}};var g=n(19),S=n(12);Object(l.a)({url:"https://statecharts.io/inspect",iframe:!1});const b=Object(r.a)({id:"root",type:"parallel",states:{dm:Object(o.a)({},E),asrtts:{initial:"idle",states:{idle:{on:{LISTEN:"recognising",SPEAK:{target:"speaking",actions:Object(i.b)(((t,e)=>({ttsAgenda:e.value})))}}},recognising:{initial:"progress",entry:"recStart",exit:"recStop",on:{ASRRESULT:{actions:["recLogResult",Object(i.b)(((t,e)=>({recResult:e.value})))],target:".match"},RECOGNISED:"idle"},states:{progress:{},match:{entry:Object(i.k)("RECOGNISED")}}},speaking:{entry:"ttsStart",on:{ENDSPEECH:"idle"}}}}}},{actions:{recLogResult:t=>{console.log("<< ASR: "+t.recResult)},test:()=>{console.log("test")},logIntent:t=>{console.log("<< NLU intent: "+t.nluData.intent.name)}}}),O=t=>{switch(!0){case t.state.matches({asrtts:"recognising"}):return Object(S.jsx)("button",Object(o.a)(Object(o.a)({type:"button",className:"glow-on-hover",style:{animation:"glowing 20s linear"}},t),{},{children:"Listening..."}));case t.state.matches({asrtts:"speaking"}):return Object(S.jsx)("button",Object(o.a)(Object(o.a)({type:"button",className:"glow-on-hover",style:{animation:"bordering 1s infinite"}},t),{},{children:"Speaking..."}));default:return Object(S.jsx)("button",Object(o.a)(Object(o.a)({type:"button",className:"glow-on-hover"},t),{},{children:"Click to start"}))}};function k(){const t=Object(g.useSpeechSynthesis)({onEnd:()=>{y("ENDSPEECH")}}),e=t.speak,n=t.cancel,o=(t.speaking,Object(g.useSpeechRecognition)({onResult:t=>{y({type:"ASRRESULT",value:t})}})),s=o.listen,r=(o.listening,o.stop),i=Object(c.b)(b,{devTools:!0,actions:{recStart:Object(c.a)((()=>{console.log("Ready to receive a color command."),s({interimResults:!1,continuous:!0})})),recStop:Object(c.a)((()=>{console.log("Recognition stopped."),r()})),changeColour:Object(c.a)((t=>{console.log("Repainting..."),document.body.style.background=t.recResult})),ttsStart:Object(c.a)(((t,n)=>{console.log("Speaking..."),e({text:t.ttsAgenda})})),ttsCancel:Object(c.a)(((t,e)=>{console.log("TTS STOP..."),n()}))}}),l=Object(a.a)(i,3),d=l[0],y=l[1];l[2];return Object(S.jsx)("div",{className:"App",children:Object(S.jsx)(O,{state:d,onClick:()=>y("CLICK")})})}const j=t=>fetch(new Request("https://cors-anywhere.herokuapp.com/https://lab-ii.herokuapp.com/model/parse",{method:"POST",headers:{Origin:"http://localhost:3000/react-xstate-colourchanger"},body:'{"text": "'.concat(t,'"}')})).then((t=>t.json())),R=document.getElementById("root");s.render(Object(S.jsx)(k,{}),R)}},[[35,1,2]]]);
//# sourceMappingURL=main.88531bd8.chunk.js.map